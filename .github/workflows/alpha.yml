name: Pre-Release CI

on:
  push:
    branches: [main]
    tags-ignore: ["*"]

concurrency:
  group: alpha-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
          node-version: lts/*

      - name: Generate Changelog
        id: generate
        run: |
          pre_version=$(git tag --sort=-creatordate | grep -Ev "alpha" | sed -n 1p)
          npx changelogithub --from ${pre_version} --to main
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  pre-release-build:
    needs: ["generate-changelog"]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        if: matrix.os != 'ubuntu-latest'
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        if: matrix.os != 'ubuntu-latest'
        run: rustup target add ${{ matrix.target }}

      - name: Build (Windows / MacOS)
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: ./.github/build-for-linux
        with:
          target: ${{ matrix.target }}

      - name: Rename Clash Verge Service (Linux / MacOS)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/clash-verge-service ./clash-verge-service-${{ matrix.target }}

      - name: Rename Clash Verge Service (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/clash-verge-service.exe ./clash-verge-service-${{ matrix.target }}.exe

      - name: Update Tag
        uses: richardsimko/update-tag@v1
        with:
          tag_name: alpha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          name: Clash Verge Service Alpha
          tag_name: alpha
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./clash-verge-service-${{ matrix.target }}
            ./clash-verge-service-${{ matrix.target }}.exe
